import sys
import stat
import os
import re
import time
#import xlwt
import pypff

from datetime import date

def RecurseFolderCount(folder, pst_path, TotalCount, msgCount, d):
    print "Current File:  "+d+" Count: "+str(TotalCount)
    print "current folder: "+str(folder)
    print "Child Folders: "+str(folder.sub_folders)
    print "Count Here: "+str(TotalCount)
    print "Item Count here: "+str(folder.number_of_sub_messages)+"\n"
    TotalCount = TotalCount + folder.number_of_sub_messages
    #os.system('cls')

    for subFolder in folder.sub_folders:
        print subFolder.get_name()
        TotalCount = RecurseFolderCount(subFolder, pst_path, TotalCount, msgCount, d)

    print "Returning "+str(TotalCount)
    return TotalCount



msgCount = 0
directory = "."
extension = ".pst"
TTemp = 0
OverAllSize=0
TotalCount = 0
OverAllCount = 0
mbSize = 0
gbSize=0
pstpath = '.'
#wbk = xlwt.Workbook()
#sheet = wbk.add_sheet('sheet 1')
s = 0


for (path, dirs, files) in os.walk(pstpath):
    filelist=[file for file in files if file.lower().endswith(extension)]

    for d in filelist:
        print d

        try:
            size = os.path.getsize(os.path.join(path,d))
            #size /= 1024*1024.0
            #gsize /= 1024*1024*1024.0
            OverAllSize = size + OverAllSize
            pff_file = pypff.file()

            #pff_file.open("/home/jason/Temp/test.pst","r")
            file_object = open(os.path.join(path,d))
            pff_file.open_file_object(file_object)
            #pff_item = pff_file.get_item(0)
        except Exception as e:
            s = s + 1
            #pff edit
            sheet.write(s,0,path + "\\" +d)
            sheet.write(s,1,str("Unable to open"))
            sheet.write(s,2,str("Unable to open"))
            continue
            
        rootFolder = pff_file.get_root_folder()
        #print "working on " + d
        #print "RootCount: " + str(rootFolder.Items.Count)
        TotalCount = 0
        TotalCount = RecurseFolderCount(rootFolder, path, TotalCount, msgCount, d)
        print "TotalCount Here is: " +str(TotalCount)
        OverAllCount = OverAllCount + TotalCount
        gbSize = OverAllSize / (1024*1024*1024.0)
        mbSize = OverAllSize / (1024*1024.0)

        #print "End Count: " + str(TotalCount)
        s = s + 1
        filegbSize = size / (1024*1024*1024.0)
        filembSize = size / (1024*1024.0)


        if path == ".":
            sheet.write(s,0,d)
        else:
            sheet.write(s,0,path[1:] + "\\" +d)
        sheet.write(s,1,TotalCount)
        sheet.write(s,2,long(size))
        sheet.write(s,3,xlwt.Formula("C"+str(s+1)+" / (1024*1024)"))
        sheet.write(s,4,xlwt.Formula("C"+str(s+1)+" / (1024*1024*1024)"))
        #out.write(path + "\\" + d +"\t"+str(TotalCount)+"\t"+str(size)+"\n")
sheet.write(0,0,"File")
sheet.write(0,1,"MSG Count")
sheet.write(0,2,"Size in Bytes")
sheet.write(0,3,"Size in MB")
sheet.write(0,4,"Size in GB")


sheet.write(s+3,1,"Total MSG Count")
sheet.write(s+4,1,OverAllCount)
sheet.write(s+3,2,"Total Size Bytes")
sheet.write(s+4,2,long(OverAllSize))
sheet.write(s+6,2,"Total Size MB")
sheet.write(s+7,2,xlwt.Formula("C"+str(s+5)+" / (1024*1024)"))
sheet.write(s+9,2,"Total Size GB")
sheet.write(s+10,2,xlwt.Formula("C"+str(s+5)+" / (1024*1024*1024)"))
#out.write("\nTotal msg count: "+str(OverAllCount)+"\tTotal Data Size: "+str(OverAllSize)+"bytes\t"+str(mbSize)+"mb\t"+str(gbSize)+"gb")
wbk.save('report.xls')
